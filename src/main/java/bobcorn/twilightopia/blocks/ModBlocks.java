package bobcorn.twilightopia.blocks;

import bobcorn.twilightopia.TwilightopiaMod;
//import bobcorn.twilightopia.effects.ModEffects;
//import bobcorn.twilightopia.trees.CherryTree;
//import bobcorn.twilightopia.trees.IgniteTree;
//import bobcorn.twilightopia.trees.ProphetTree;
import net.minecraft.block.Block;
import net.minecraft.block.FenceBlock;
import net.minecraft.block.FenceGateBlock;
import net.minecraft.block.LogBlock;
import net.minecraft.block.PressurePlateBlock;
import net.minecraft.block.SlabBlock;
import net.minecraft.block.SoundType;
import net.minecraft.block.StairsBlock;
import net.minecraft.block.trees.BirchTree;
import net.minecraft.block.trees.OakTree;
import net.minecraft.block.trees.AcaciaTree;
import net.minecraft.block.material.Material;
import net.minecraft.block.material.MaterialColor;
import net.minecraft.potion.Effects;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;

public final class ModBlocks {
	public static final DeferredRegister<Block> BLOCKS = new DeferredRegister<>(ForgeRegistries.BLOCKS, TwilightopiaMod.MODID);
	
	static public final RegistryObject<Block> CHOCOLATE_BLOCK = BLOCKS.register("chocolate_block", () -> new Block(Block.Properties.create(Material.ROCK).hardnessAndResistance(1.5F, 6.0F).sound(SoundType.STONE)));
	static public final RegistryObject<Block> GRASSED_CHOCOLATE_BLOCK = BLOCKS.register("grassed_chocolate_block", () -> new GrassedChocolateBlock(Block.Properties.create(Material.ROCK).hardnessAndResistance(1.5F, 6.0F).sound(SoundType.STONE).tickRandomly()));
	static public final RegistryObject<Block> WHITE_CHOCOLATE_BLOCK = BLOCKS.register("white_chocolate_block", () -> new Block(Block.Properties.create(Material.ROCK).hardnessAndResistance(1.5F, 6.0F).sound(SoundType.STONE)));
	static public final RegistryObject<Block> GRASSED_WHITE_CHOCOLATE_BLOCK = BLOCKS.register("grassed_white_chocolate_block", () -> new GrassedChocolateBlock(Block.Properties.create(Material.ROCK).hardnessAndResistance(1.5F, 6.0F).sound(SoundType.STONE).tickRandomly()));
	static public final RegistryObject<Block> VELVET_GRASS = BLOCKS.register("velvet_grass", () -> new TwilightopiaBushBlock(Block.Properties.create(Material.PLANTS).hardnessAndResistance(0.0F).doesNotBlockMovement().sound(SoundType.PLANT)));
	static public final RegistryObject<Block> RAINBUSH = BLOCKS.register("rainbush", () -> new TwilightopiaBushBlock(Block.Properties.create(Material.PLANTS).hardnessAndResistance(0.2F).doesNotBlockMovement().sound(SoundType.PLANT)));
	static public final RegistryObject<Block> CHEESE_BLOCK = BLOCKS.register("cheese_block", () -> new Block(Block.Properties.create(Material.ROCK).sound(SoundType.STONE).hardnessAndResistance(3.0F, 3.0F)));
	static public final RegistryObject<Block> RUBY_ORE = BLOCKS.register("ruby_ore", () -> new OrePlusBlock(Block.Properties.create(Material.ROCK).sound(SoundType.STONE).hardnessAndResistance(3.0F, 3.0F)));
	static public final RegistryObject<Block> INFESTED_CHEESE_BLOCK = BLOCKS.register("infested_cheese_block", () -> new RatBlock(CHEESE_BLOCK.get(), Block.Properties.create(Material.ROCK).sound(SoundType.STONE).hardnessAndResistance(0.0F, 0.9F)));
	static public final RegistryObject<Block> PROPHET_LOG = BLOCKS.register("prophet_log", () -> new ProphetLogBlock(Block.Properties.create(Material.WOOD, MaterialColor.GRAY).hardnessAndResistance(2.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> BELL_LEAVES = BLOCKS.register("bell_leaves", () -> new TwilightopiaLeavesBlock(Block.Properties.create(Material.LEAVES).hardnessAndResistance(0.2F).sound(SoundType.PLANT).tickRandomly()));
	static public final RegistryObject<Block> PROPHET_SAPLING = BLOCKS.register("prophet_sapling", () -> new TwilightopiaSaplingBlock(new BirchTree() ,Block.Properties.create(Material.LEAVES).hardnessAndResistance(0.2F).doesNotBlockMovement().sound(SoundType.PLANT).tickRandomly()));
	static public final RegistryObject<Block> CHERRY_LOG = BLOCKS.register("cherry_log", () -> new LogBlock(MaterialColor.PINK, Block.Properties.create(Material.WOOD, MaterialColor.PINK).hardnessAndResistance(2.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> STRIPPED_CHERRY_LOG = BLOCKS.register("stripped_cherry_log", () -> new LogBlock(MaterialColor.PINK, Block.Properties.create(Material.WOOD, MaterialColor.PINK).hardnessAndResistance(2.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> CHERRY_WOOD = BLOCKS.register("cherry_wood", () -> new LogBlock(MaterialColor.PINK, Block.Properties.create(Material.WOOD, MaterialColor.PINK).hardnessAndResistance(2.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> STRIPPED_CHERRY_WOOD = BLOCKS.register("stripped_cherry_wood", () -> new LogBlock(MaterialColor.PINK, Block.Properties.create(Material.WOOD, MaterialColor.PINK).hardnessAndResistance(2.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> CHERRY_PLANKS = BLOCKS.register("cherry_planks", () -> new Block(Block.Properties.create(Material.WOOD, MaterialColor.PINK_TERRACOTTA).hardnessAndResistance(2.0F, 3.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> CHERRY_DOOR = BLOCKS.register("cherry_door", () -> new TwilightopiaDoorBlock(Block.Properties.create(Material.WOOD, MaterialColor.PINK_TERRACOTTA).hardnessAndResistance(3.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> CHERRY_TRAPDOOR = BLOCKS.register("cherry_trapdoor", () -> new TwilightopiaTrapDoorBlock(Block.Properties.create(Material.WOOD, MaterialColor.WOOD).hardnessAndResistance(3.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> CHERRY_STAIRS = BLOCKS.register("cherry_stairs", () -> new StairsBlock(() -> CHERRY_PLANKS.get().getDefaultState(), Block.Properties.from(CHERRY_PLANKS.get())) );
	static public final RegistryObject<Block> CHERRY_SLAB = BLOCKS.register("cherry_slab", () -> new SlabBlock(Block.Properties.create(Material.WOOD, MaterialColor.PINK_TERRACOTTA).hardnessAndResistance(2.0F, 3.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> CHERRY_BUTTON = BLOCKS.register("cherry_button", () -> new TwilightopiaButtonBlock(Block.Properties.create(Material.MISCELLANEOUS).doesNotBlockMovement().hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> CHERRY_FENCE_GATE = BLOCKS.register("cherry_fence_gate", () -> new FenceGateBlock(Block.Properties.create(Material.WOOD, MaterialColor.PINK_TERRACOTTA).hardnessAndResistance(2.0F, 3.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> CHERRY_FENCE = BLOCKS.register("cherry_fence", () -> new FenceBlock(Block.Properties.create(Material.WOOD, MaterialColor.PINK_TERRACOTTA).hardnessAndResistance(2.0F, 3.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> CHERRY_PRESSURE_PLATE = BLOCKS.register("cherry_pressure_plate", () -> new TwilightopiaPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, Block.Properties.create(Material.WOOD, MaterialColor.PINK_TERRACOTTA).doesNotBlockMovement().hardnessAndResistance(0.5F).sound(SoundType.WOOD)));    
	static public final RegistryObject<Block> BLESSING_PLANKS = BLOCKS.register("blessing_planks", () -> new BlessingPlanksBlock(Block.Properties.create(Material.WOOD, MaterialColor.PINK).hardnessAndResistance(2.0F, 3.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> CHERRY_LEAVES = BLOCKS.register("cherry_leaves", () -> new TwilightopiaLeavesBlock(Block.Properties.create(Material.LEAVES).hardnessAndResistance(0.2F).sound(SoundType.PLANT).tickRandomly()));
	static public final RegistryObject<Block> PINK_CHERRY_LEAVES = BLOCKS.register("pink_cherry_leaves", () -> new TwilightopiaLeavesBlock(Block.Properties.create(Material.LEAVES).hardnessAndResistance(0.2F).sound(SoundType.PLANT).tickRandomly()));
	static public final RegistryObject<Block> CHERRY_SAPLING = BLOCKS.register("cherry_sapling", () -> new TwilightopiaSaplingBlock(new OakTree() ,Block.Properties.create(Material.LEAVES).hardnessAndResistance(0.2F).doesNotBlockMovement().sound(SoundType.PLANT).tickRandomly()));
	static public final RegistryObject<Block> IGNITE_LOG = BLOCKS.register("ignite_log", () -> new IgniteLogBlock(MaterialColor.ORANGE_TERRACOTTA, Block.Properties.create(Material.WOOD, MaterialColor.ORANGE_TERRACOTTA).hardnessAndResistance(3.0F).sound(SoundType.WOOD).lightValue(12)));
	static public final RegistryObject<Block> STRIPPED_IGNITE_LOG = BLOCKS.register("stripped_ignite_log", () -> new LogBlock(MaterialColor.WHITE_TERRACOTTA, Block.Properties.create(Material.WOOD, MaterialColor.WHITE_TERRACOTTA).hardnessAndResistance(2.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> IGNITE_WOOD = BLOCKS.register("ignite_wood", () -> new LogBlock(MaterialColor.WHITE_TERRACOTTA, Block.Properties.create(Material.WOOD, MaterialColor.WHITE_TERRACOTTA).hardnessAndResistance(2.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> STRIPPED_IGNITE_WOOD = BLOCKS.register("stripped_ignite_wood", () -> new LogBlock(MaterialColor.ORANGE_TERRACOTTA, Block.Properties.create(Material.WOOD, MaterialColor.ORANGE_TERRACOTTA).hardnessAndResistance(2.0F).sound(SoundType.WOOD)));
	static public final RegistryObject<Block> IGNITE_PLANKS = BLOCKS.register("ignite_planks", () -> new Block(Block.Properties.create(Material.WOOD, MaterialColor.YELLOW).hardnessAndResistance(2.0F, 3.0F).sound(SoundType.WOOD).lightValue(13)));
	static public final RegistryObject<Block> IGNITE_DOOR = BLOCKS.register("ignite_door", () -> new TwilightopiaDoorBlock(Block.Properties.create(Material.WOOD, MaterialColor.YELLOW).hardnessAndResistance(3.0F).sound(SoundType.WOOD).lightValue(13)));
	static public final RegistryObject<Block> IGNITE_TRAPDOOR = BLOCKS.register("ignite_trapdoor", () -> new TwilightopiaTrapDoorBlock(Block.Properties.create(Material.WOOD, MaterialColor.WOOD).hardnessAndResistance(3.0F).sound(SoundType.WOOD).lightValue(13)));
	static public final RegistryObject<Block> IGNITE_STAIRS = BLOCKS.register("ignite_stairs", () -> new StairsBlock(() -> IGNITE_PLANKS.get().getDefaultState(), Block.Properties.from(IGNITE_PLANKS.get()).lightValue(13)));
	static public final RegistryObject<Block> IGNITE_SLAB = BLOCKS.register("ignite_slab", () -> new SlabBlock(Block.Properties.create(Material.WOOD, MaterialColor.YELLOW).hardnessAndResistance(2.0F, 3.0F).sound(SoundType.WOOD).lightValue(13)));
	static public final RegistryObject<Block> IGNITE_BUTTON = BLOCKS.register("ignite_button", () -> new TwilightopiaButtonBlock(Block.Properties.create(Material.MISCELLANEOUS).doesNotBlockMovement().hardnessAndResistance(0.5F).sound(SoundType.WOOD).lightValue(10)));
	static public final RegistryObject<Block> IGNITE_FENCE_GATE = BLOCKS.register("ignite_fence_gate", () -> new FenceGateBlock(Block.Properties.create(Material.WOOD, MaterialColor.YELLOW).hardnessAndResistance(2.0F, 3.0F).sound(SoundType.WOOD).lightValue(12)));
	static public final RegistryObject<Block> IGNITE_FENCE = BLOCKS.register("ignite_fence", () -> new FenceBlock(Block.Properties.create(Material.WOOD, MaterialColor.YELLOW).hardnessAndResistance(2.0F, 3.0F).sound(SoundType.WOOD).lightValue(12)));
	static public final RegistryObject<Block> IGNITE_PRESSURE_PLATE = BLOCKS.register("ignite_pressure_plate", () -> new TwilightopiaPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, Block.Properties.create(Material.WOOD, MaterialColor.YELLOW).doesNotBlockMovement().hardnessAndResistance(0.5F).sound(SoundType.WOOD).lightValue(11)));
	static public final RegistryObject<Block> IGNITE_LEAVES = BLOCKS.register("ignite_leaves", () -> new TwilightopiaLeavesBlock(Block.Properties.create(Material.LEAVES, MaterialColor.YELLOW_TERRACOTTA).hardnessAndResistance(0.3F).sound(SoundType.PLANT).tickRandomly().lightValue(14)));
	static public final RegistryObject<Block> IGNITE_SAPLING = BLOCKS.register("ignite_sapling", () -> new TwilightopiaSaplingBlock(new AcaciaTree() ,Block.Properties.create(Material.LEAVES).hardnessAndResistance(0.2F).doesNotBlockMovement().sound(SoundType.PLANT).lightValue(7).tickRandomly()));
	static public final RegistryObject<Block> CHOCOLATE_CAKE = BLOCKS.register("chocolate_cake", () -> new TwilightopiaCakeBlock(Block.Properties.create(Material.CAKE).hardnessAndResistance(0.5F).sound(SoundType.CLOTH)));
	static public final RegistryObject<Block> PIZZA = BLOCKS.register("pizza", () -> new PizzaBlock(Block.Properties.create(Material.CAKE).hardnessAndResistance(0.5F).sound(SoundType.CLOTH)));
	static public final RegistryObject<Block> CANDY_CANE_CROP = BLOCKS.register("candy_cane_crop", () -> new TwilightopiaCropsBlock(Block.Properties.create(Material.PLANTS).doesNotBlockMovement().tickRandomly().hardnessAndResistance(0.0f).sound(SoundType.PLANT)));
	static public final RegistryObject<Block> STRAWBERRY_CROP = BLOCKS.register("strawberry_crop", () -> new TwilightopiaCropsBlock(Block.Properties.create(Material.PLANTS).doesNotBlockMovement().tickRandomly().hardnessAndResistance(0.0f).sound(SoundType.PLANT)));
	static public final RegistryObject<Block> TOMATO_CROP = BLOCKS.register("tomato_crop", () -> new TwilightopiaCropsBlock(Block.Properties.create(Material.PLANTS).doesNotBlockMovement().tickRandomly().hardnessAndResistance(0.0f).sound(SoundType.PLANT)));
	public static final RegistryObject<Block> TULIPORTAL = BLOCKS.register("tuliportal", () -> new TuliportalBlock(Block.Properties.create(Material.PORTAL).doesNotBlockMovement().tickRandomly().hardnessAndResistance(-1.0F).sound(SoundType.GLASS).lightValue(11).noDrops()));
	static public final RegistryObject<Block> PROJECTABLE = BLOCKS.register("projectable", () -> new ProjectableBlock(Block.Properties.create(Material.ROCK).hardnessAndResistance(10.0F).sound(SoundType.STONE)));
	static public final RegistryObject<Block> RUBY_BLOCK = BLOCKS.register("ruby_block", () -> new Block(Block.Properties.create(Material.IRON, MaterialColor.PINK).hardnessAndResistance(7.0F, 8.0F).sound(SoundType.METAL)));
	static public final RegistryObject<Block> CANDY_BLOCK = BLOCKS.register("candy_block", () -> new Block(Block.Properties.create(Material.ROCK, MaterialColor.WHITE_TERRACOTTA).hardnessAndResistance(3.0F, 3.0F).sound(SoundType.STONE)));
	static public final RegistryObject<Block> PINK_CANDY_BLOCK = BLOCKS.register("pink_candy_block", () -> new Block(Block.Properties.create(Material.ROCK, MaterialColor.PINK).hardnessAndResistance(3.0F, 3.0F).sound(SoundType.STONE)));
	static public final RegistryObject<Block> PURPLE_CANDY_BLOCK = BLOCKS.register("purple_candy_block", () -> new Block(Block.Properties.create(Material.ROCK, MaterialColor.PURPLE).hardnessAndResistance(3.0F, 3.0F).sound(SoundType.STONE)));
	static public final RegistryObject<Block> ORANGE_CANDY_BLOCK = BLOCKS.register("orange_candy_block", () -> new Block(Block.Properties.create(Material.ROCK, MaterialColor.ORANGE_TERRACOTTA).hardnessAndResistance(3.0F, 3.0F).sound(SoundType.STONE)));
	static public final RegistryObject<Block> YELLOW_CANDY_BLOCK = BLOCKS.register("yellow_candy_block", () -> new Block(Block.Properties.create(Material.ROCK, MaterialColor.YELLOW).hardnessAndResistance(3.0F, 3.0F).sound(SoundType.STONE)));
	static public final RegistryObject<Block> RED_CANDY_BLOCK = BLOCKS.register("red_candy_block", () -> new Block(Block.Properties.create(Material.ROCK, MaterialColor.RED).hardnessAndResistance(3.0F, 3.0F).sound(SoundType.STONE)));
	static public final RegistryObject<Block> ROSE = BLOCKS.register("rose", () -> new TwilightopiaFlowerBlock(Effects.INSTANT_HEALTH, 6, Block.Properties.create(Material.PLANTS).hardnessAndResistance(0.0F).doesNotBlockMovement().sound(SoundType.PLANT).tickRandomly()));
	static public final RegistryObject<Block> TANGERINE_ROSE = BLOCKS.register("tangerine_rose", () -> new TwilightopiaFlowerBlock(Effects.GLOWING, 9, Block.Properties.create(Material.PLANTS).hardnessAndResistance(0.0F).doesNotBlockMovement().sound(SoundType.PLANT).tickRandomly()));
	static public final RegistryObject<Block> FUCHSIA_ROSE = BLOCKS.register("fuchsia_rose", () -> new TwilightopiaFlowerBlock(Effects.LUCK, 6, Block.Properties.create(Material.PLANTS).hardnessAndResistance(0.0F).doesNotBlockMovement().sound(SoundType.PLANT).tickRandomly()));
	static public final RegistryObject<Block> BLUE_ROSE = BLOCKS.register("blue_rose", () -> new TwilightopiaFlowerBlock(Effects.LUCK, 8, Block.Properties.create(Material.PLANTS).hardnessAndResistance(0.0F).doesNotBlockMovement().sound(SoundType.PLANT).tickRandomly()));
	static public final RegistryObject<Block> WHITE_ROSE = BLOCKS.register("white_rose", () -> new TwilightopiaFlowerBlock(Effects.LUCK, 7, Block.Properties.create(Material.PLANTS).hardnessAndResistance(0.0F).doesNotBlockMovement().sound(SoundType.PLANT).tickRandomly()));
	static public final RegistryObject<Block> CANDELION = BLOCKS.register("candelion", () -> new TwilightopiaFlowerBlock(Effects.LUCK, 6, Block.Properties.create(Material.PLANTS).hardnessAndResistance(0.0F).doesNotBlockMovement().sound(SoundType.PLANT).tickRandomly()));
	static public final RegistryObject<Block> GLOWING_FUNGI = BLOCKS.register("glowing_fungi", () -> new TwilightopiaMushroomBlock(Block.Properties.create(Material.PLANTS).hardnessAndResistance(0.0F).doesNotBlockMovement().sound(SoundType.PLANT).tickRandomly()));
	static public final RegistryObject<Block> ILLUSHROOM = BLOCKS.register("illushroom", () -> new TwilightopiaMushroomBlock(Block.Properties.create(Material.PLANTS).hardnessAndResistance(0.0F).doesNotBlockMovement().sound(SoundType.PLANT).tickRandomly()));
}
